{
	"info": {
		"_postman_id": "aed45c54-f320-4f76-a4ee-0852ecc01e65",
		"name": "Serverlessguru - code challenge",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "CognitoAuth",
			"item": [
				{
					"name": "InitiAuth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var reply = JSON.parse(responseBody);",
									"",
									"if(\"Session\" in reply){",
									"    pm.environment.set(\"session_token\", reply[\"Session\"]);",
									"    console.log(pm.environment.get(\"session_token\"));",
									"}",
									"",
									"if(\"AccessToken\" in reply[\"AuthenticationResult\"]){",
									"    pm.environment.set(\"access_token\", reply[\"AuthenticationResult\"][\"AccessToken\"]);",
									"    console.log(pm.environment.get(\"access_token\"));",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Amz-Target",
								"value": "AWSCognitoIdentityProviderService.InitiateAuth",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-amz-json-1.1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"AuthParameters\": {\n        \"USERNAME\": \"{{username}}\",\n        \"PASSWORD\": \"{{password}}\"\n    },\n    \"AuthFlow\": \"USER_PASSWORD_AUTH\",\n    \"ClientId\": \"{{cognito_client_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cognito_auth_url}}",
							"host": [
								"{{cognito_auth_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ReplyChallenge",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var reply = JSON.parse(responseBody);",
									"",
									"if(\"AccessToken\" in reply){",
									"    pm.environment.set(\"access_token\", reply[\"AccessToken\"]);",
									"    console.log(pm.environment.get(\"access_token\"));",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Amz-Target",
								"value": "AWSCognitoIdentityProviderService.RespondToAuthChallenge",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-amz-json-1.1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ChallengeName\": \"NEW_PASSWORD_REQUIRED\",\n    \"ChallengeResponses\": {\n        \"USERNAME\": \"{{username}}\",\n        \"NEW_PASSWORD\": \"{{password}}\"\n    },\n    \"ClientId\": \"{{cognito_client_id}}\",\n    \"Session\": \"{{session_token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cognito_auth_url}}",
							"host": [
								"{{cognito_auth_url}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CreateOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var reply = JSON.parse(responseBody);",
							"",
							"pm.environment.set(\"order_id\", reply[\"data\"][\"createOrder\"][\"order_id\"])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Test {\n    createOrder(\n        products: [\n            \"big cheese burger\",\n            \"medium fries\",\n            \"medium cola soda\"\n        ],\n        restaurant_id: \"1\",\n        user_address: \"my home\",\n        user_email: \"user@user.com\",\n        user_phonenumber: \"my_phone_number\",\n        subtotal: 9.5,\n        tax: 0.2,\n        delivery_fee: 1.0,\n        total: 10.7,\n    ) {\n        order_id\n        products\n        created_at\n        status\n        total\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{api_url}}",
					"host": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Test ($order_id: String!) {\n    updateOrder(\n        order_id: $order_id\n        products: [\n            \"big cheese burger\",\n            \"medium fries\",\n            \"medium cola soda\"\n        ],\n        restaurant_id: \"1\",\n        user_address: \"my home\",\n        user_email: \"user@user.com\",\n        user_phonenumber: \"my_phone_number\",\n        subtotal: 9.4,\n        tax: 0.2,\n        delivery_fee: 1.0,\n        total: 10.6,\n    ) {\n        order_id\n        products\n        last_modified_at\n        status\n        total\n  }\n}",
						"variables": "{\n    \"order_id\": \"{{order_id}}\"\n}"
					}
				},
				"url": {
					"raw": "{{api_url}}",
					"host": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "AcceptOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Test ($order_id: String!) {\n    acceptOrder(\n        order_id: $order_id\n    ) {\n        order_id\n        products\n        last_modified_at\n        status\n        total\n  }\n}",
						"variables": "{\n    \"order_id\": \"{{order_id}}\"\n}"
					}
				},
				"url": {
					"raw": "{{api_url}}",
					"host": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "StartCookingOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Test ($order_id: String!) {\n    startCookingOrder(\n        order_id: $order_id\n    ) {\n        order_id\n        products\n        last_modified_at\n        status\n        total\n  }\n}",
						"variables": "{\n    \"order_id\": \"{{order_id}}\"\n}"
					}
				},
				"url": {
					"raw": "{{api_url}}",
					"host": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ReadyToDeliverOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Test ($order_id: String!) {\n    readyToDeliverOrder(\n        order_id: $order_id\n    ) {\n        order_id\n        products\n        last_modified_at\n        status\n        total\n  }\n}",
						"variables": "{\n    \"order_id\": \"{{order_id}}\"\n}"
					}
				},
				"url": {
					"raw": "{{api_url}}",
					"host": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "OnRouteOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Test ($order_id: String!) {\n    onRouteOrder(\n        order_id: $order_id\n    ) {\n        order_id\n        products\n        last_modified_at\n        status\n        total\n  }\n}",
						"variables": "{\n    \"order_id\": \"{{order_id}}\"\n}"
					}
				},
				"url": {
					"raw": "{{api_url}}",
					"host": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeliveredOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Test ($order_id: String!) {\n    deliveredOrder(\n        order_id: $order_id\n    ) {\n        order_id\n        products\n        last_modified_at\n        status\n        total\n  }\n}",
						"variables": "{\n    \"order_id\": \"{{order_id}}\"\n}"
					}
				},
				"url": {
					"raw": "{{api_url}}",
					"host": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "CancelOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Test ($order_id: String!) {\n    cancelOrder(\n        order_id: $order_id\n    ) {\n        order_id\n        products\n        last_modified_at\n        status\n        total\n  }\n}",
						"variables": "{\n    \"order_id\": \"{{order_id}}\"\n}"
					}
				},
				"url": {
					"raw": "{{api_url}}",
					"host": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetOrder",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query Test ($order_id: String!) {\n    getOrder(\n        order_id: $order_id\n    ) {\n        order_id\n        products\n        created_at\n        status\n        total\n  }\n}",
						"variables": "{\n    \"order_id\": \"{{order_id}}\"\n}"
					}
				},
				"url": {
					"raw": "{{api_url}}",
					"host": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		}
	]
}